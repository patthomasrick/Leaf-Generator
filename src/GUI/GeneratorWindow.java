package GUI;

import Generator.Generator;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.ThreadLocalRandom;
import javax.imageio.ImageIO;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pthom
 */
public class GeneratorWindow extends javax.swing.JFrame {

    /**
     * Creates new form GeneratorWindow
     */
    public GeneratorWindow() {
        initComponents();
        this.setTitle("Leaf Generator");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jSeparator3 = new javax.swing.JSeparator();
        popupMenu1 = new java.awt.PopupMenu();
        jFrame1 = new javax.swing.JFrame();
        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        tabsInstructionLabel = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        pinnateTab = new javax.swing.JPanel();
        dimensionsLabel = new javax.swing.JLabel();
        multSignLabel = new javax.swing.JLabel();
        widthField = new javax.swing.JTextField();
        heightField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        midribLabel = new javax.swing.JLabel();
        midribLengthPropLabel = new javax.swing.JLabel();
        midribLengthPropField = new javax.swing.JTextField();
        midribOffsetPropLabel = new javax.swing.JLabel();
        midribOffsetPropField = new javax.swing.JTextField();
        minVarLabel = new javax.swing.JLabel();
        maxVarLabel = new javax.swing.JLabel();
        midribLengthPropLB = new javax.swing.JTextField();
        midribLengthPropRB = new javax.swing.JTextField();
        midribMarginPropLB = new javax.swing.JTextField();
        midribMarginPropRB = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        pVLabel = new javax.swing.JLabel();
        maxVarLabelPV = new javax.swing.JLabel();
        minVarLabelPV = new javax.swing.JLabel();
        pVNumVeinsLabel = new javax.swing.JLabel();
        pVNumVeinsField = new javax.swing.JTextField();
        pVNumVeinsLB = new javax.swing.JTextField();
        pVNumVeinsRB = new javax.swing.JTextField();
        pVAngleLabel = new javax.swing.JLabel();
        pVAngleField = new javax.swing.JTextField();
        pVAngleLB = new javax.swing.JTextField();
        pVAngleRB = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        genOptsLabel = new javax.swing.JLabel();
        genOptsFileTypeLabel = new javax.swing.JLabel();
        genOptsFileTypeComboBox = new javax.swing.JComboBox<>();
        genOptsPathLabel = new javax.swing.JLabel();
        genOptsPathField = new javax.swing.JTextField();
        genOptsNumLabel = new javax.swing.JLabel();
        genOptsNumSpinner = new javax.swing.JSpinner();
        progressBar = new javax.swing.JProgressBar();
        startButton = new javax.swing.JButton();
        progressLabel = new javax.swing.JLabel();
        pinnateResetButton = new javax.swing.JButton();
        laminaLabel = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        laminaBreadthLabel = new javax.swing.JLabel();
        laminaRiseLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        laminaRiseField = new javax.swing.JTextField();
        laminaFallField = new javax.swing.JTextField();
        laminaBreadthField = new javax.swing.JTextField();
        laminaRiseSlider = new javax.swing.JSlider();
        laminaFallSlider = new javax.swing.JSlider();
        parallelVeins = new javax.swing.JPanel();
        jMenuBar2 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        fileExitMenuItem = new javax.swing.JMenuItem();
        EditMenu = new javax.swing.JMenu();
        ToolMenu = new javax.swing.JMenu();
        setToDefaults = new javax.swing.JMenuItem();

        popupMenu1.setLabel("popupMenu1");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabsInstructionLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        tabsInstructionLabel.setLabelFor(tabs);
        tabsInstructionLabel.setText("Choose a style of leaf to generate on the available tabs.");

        dimensionsLabel.setText("Dimensions");

        multSignLabel.setText("x");

        widthField.setText("1280");
        widthField.setToolTipText("The width of the image that will be generated");
        widthField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                widthFieldActionPerformed(evt);
            }
        });

        heightField.setText("720");
        heightField.setToolTipText("The height of the image that will be generated");

        midribLabel.setText("Midrib");

        midribLengthPropLabel.setText("Length proportion");

        midribLengthPropField.setText("Double between 0.0 and 1.0");
        midribLengthPropField.setToolTipText("Length of the midrib in respect to the width of the image");
        midribLengthPropField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                midribLengthPropFieldActionPerformed(evt);
            }
        });

        midribOffsetPropLabel.setText("Margin proportion");

        midribOffsetPropField.setText("Double between 0.0 and 1.0");
        midribOffsetPropField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                midribOffsetPropFieldActionPerformed(evt);
            }
        });

        minVarLabel.setText("Left Bound");

        maxVarLabel.setText("Right bound");

        midribLengthPropLB.setText("-0.10");
        midribLengthPropLB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                midribLengthPropLBActionPerformed(evt);
            }
        });

        midribLengthPropRB.setText("0.10");
        midribLengthPropRB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                midribLengthPropRBActionPerformed(evt);
            }
        });

        midribMarginPropLB.setText("-0.10");

        midribMarginPropRB.setText("0.10");

        pVLabel.setText("Primary Veins");

        maxVarLabelPV.setText("Right bound");

        minVarLabelPV.setText("Left Bound");

        pVNumVeinsLabel.setText("Num. veins");

        pVNumVeinsField.setEditable(false);
        pVNumVeinsField.setText("Set using bounds");
        pVNumVeinsField.setToolTipText("The number of branching veins from the midrib on one side of the leaf");
        pVNumVeinsField.setEnabled(false);
        pVNumVeinsField.setFocusable(false);
        pVNumVeinsField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pVNumVeinsFieldActionPerformed(evt);
            }
        });

        pVNumVeinsLB.setText("Integer");
        pVNumVeinsLB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pVNumVeinsLBActionPerformed(evt);
            }
        });

        pVNumVeinsRB.setEditable(false);
        pVNumVeinsRB.setText("Integer");
        pVNumVeinsRB.setEnabled(false);
        pVNumVeinsRB.setFocusable(false);
        pVNumVeinsRB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pVNumVeinsRBActionPerformed(evt);
            }
        });

        pVAngleLabel.setText("Angle of veins");

        pVAngleField.setText("Degrees between 0 to 180");
        pVAngleField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pVAngleFieldActionPerformed(evt);
            }
        });

        pVAngleLB.setText("-0.10");

        pVAngleRB.setText("0.10");

        genOptsLabel.setText("Generator Options");

        genOptsFileTypeLabel.setText("File type");

        genOptsFileTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GIF", "PNG", "JPG" }));
        genOptsFileTypeComboBox.setSelectedIndex(1);

        genOptsPathLabel.setText("Output path");

        genOptsPathField.setText(System.getProperty("user.dir"));
        genOptsPathField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                genOptsPathFieldActionPerformed(evt);
            }
        });

        genOptsNumLabel.setText("Number of images to generate");

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                startButtonActionPerformed(evt);
            }
        });

        progressLabel.setText("Progress");

        pinnateResetButton.setText("Set all values to example values");
        pinnateResetButton.setToolTipText("Resets all fields to example values, current data will be lost!");
        pinnateResetButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pinnateResetButtonActionPerformed(evt);
            }
        });

        laminaLabel.setText("Lamina");

        laminaBreadthLabel.setText("Breadth");

        laminaRiseLabel.setText("End of rise");

        jLabel2.setText("Start of fall");

        laminaRiseField.setText("0.0 - 1.0");
        laminaRiseField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                laminaRiseFieldFocusLost(evt);
            }
        });

        laminaFallField.setText("0.0 - 1.0");
        laminaFallField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                laminaFallFieldFocusLost(evt);
            }
        });

        laminaBreadthField.setText("Double between 0.0 and 1.0, in relation to image height");

        laminaRiseSlider.setValue(30);
        laminaRiseSlider.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                laminaRiseSliderMouseReleased(evt);
            }
        });

        laminaFallSlider.setValue(60);
        laminaFallSlider.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                laminaFallSliderMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pinnateTabLayout = new javax.swing.GroupLayout(pinnateTab);
        pinnateTab.setLayout(pinnateTabLayout);
        pinnateTabLayout.setHorizontalGroup(
            pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pinnateTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pinnateTabLayout.createSequentialGroup()
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pinnateTabLayout.createSequentialGroup()
                                .addComponent(genOptsNumLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(genOptsNumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pinnateResetButton))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pinnateTabLayout.createSequentialGroup()
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator5)
                            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinnateTabLayout.createSequentialGroup()
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pVNumVeinsLabel)
                                    .addComponent(pVAngleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pVLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pinnateTabLayout.createSequentialGroup()
                                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pVNumVeinsField)
                                            .addComponent(pVAngleField))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(pVNumVeinsLB, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pVAngleLB, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinnateTabLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(minVarLabelPV)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(maxVarLabelPV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pVNumVeinsRB)
                                    .addComponent(pVAngleRB)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinnateTabLayout.createSequentialGroup()
                                .addComponent(progressLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(startButton))
                            .addGroup(pinnateTabLayout.createSequentialGroup()
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(midribLengthPropLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(midribOffsetPropLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(midribLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(midribOffsetPropField)
                                    .addComponent(midribLengthPropField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(minVarLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(midribLengthPropLB)
                                    .addComponent(midribMarginPropLB))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(maxVarLabel)
                                    .addComponent(midribLengthPropRB)
                                    .addComponent(midribMarginPropRB)))
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator4)
                            .addGroup(pinnateTabLayout.createSequentialGroup()
                                .addComponent(genOptsPathLabel)
                                .addGap(18, 18, 18)
                                .addComponent(genOptsPathField)
                                .addGap(18, 18, 18)
                                .addComponent(genOptsFileTypeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(genOptsFileTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pinnateTabLayout.createSequentialGroup()
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pinnateTabLayout.createSequentialGroup()
                                        .addComponent(widthField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(multSignLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(heightField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(dimensionsLabel)
                                    .addComponent(genOptsLabel)
                                    .addComponent(laminaLabel)
                                    .addGroup(pinnateTabLayout.createSequentialGroup()
                                        .addComponent(laminaBreadthLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(laminaBreadthField, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pinnateTabLayout.createSequentialGroup()
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(laminaRiseLabel)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(laminaFallSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(laminaRiseSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(laminaFallField)
                                    .addComponent(laminaRiseField))))
                        .addContainerGap())))
        );
        pinnateTabLayout.setVerticalGroup(
            pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pinnateTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dimensionsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pinnateTabLayout.createSequentialGroup()
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(widthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(heightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(multSignLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinnateTabLayout.createSequentialGroup()
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pinnateTabLayout.createSequentialGroup()
                                        .addComponent(maxVarLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(midribLengthPropRB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(midribLengthPropField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(midribLengthPropLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(midribMarginPropRB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(midribOffsetPropField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(midribOffsetPropLabel)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinnateTabLayout.createSequentialGroup()
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(minVarLabel)
                                    .addComponent(midribLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(midribLengthPropLB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(midribMarginPropLB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pVLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pVNumVeinsField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pVNumVeinsLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pVAngleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pVAngleLabel)))
                    .addGroup(pinnateTabLayout.createSequentialGroup()
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maxVarLabelPV)
                            .addComponent(minVarLabelPV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pVNumVeinsRB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pVNumVeinsLB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pVAngleRB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pVAngleLB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(laminaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pinnateTabLayout.createSequentialGroup()
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pinnateTabLayout.createSequentialGroup()
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(laminaBreadthLabel)
                                    .addComponent(laminaBreadthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(laminaRiseLabel)
                                    .addComponent(laminaRiseField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(laminaRiseSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(laminaFallField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(laminaFallSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(genOptsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genOptsPathLabel)
                    .addComponent(genOptsPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genOptsFileTypeLabel)
                    .addComponent(genOptsFileTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genOptsNumLabel)
                    .addComponent(genOptsNumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pinnateResetButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(progressLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pinnateTabLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {midribLengthPropField, midribOffsetPropField});

        pinnateTabLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {pVAngleField, pVNumVeinsField});

        tabs.addTab("Pinnately Veined", pinnateTab);

        javax.swing.GroupLayout parallelVeinsLayout = new javax.swing.GroupLayout(parallelVeins);
        parallelVeins.setLayout(parallelVeinsLayout);
        parallelVeinsLayout.setHorizontalGroup(
            parallelVeinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );
        parallelVeinsLayout.setVerticalGroup(
            parallelVeinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 712, Short.MAX_VALUE)
        );

        tabs.addTab("Parallel Veins", parallelVeins);

        FileMenu.setText("File");

        fileExitMenuItem.setText("Exit");
        fileExitMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fileExitMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(fileExitMenuItem);

        jMenuBar2.add(FileMenu);

        EditMenu.setText("Edit");
        EditMenu.setEnabled(false);
        jMenuBar2.add(EditMenu);

        ToolMenu.setText("Tools");

        setToDefaults.setText("Set all fields to example values");
        setToDefaults.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                setToDefaultsActionPerformed(evt);
            }
        });
        ToolMenu.add(setToDefaults);

        jMenuBar2.add(ToolMenu);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabsInstructionLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabsInstructionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setToDefaultsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setToDefaultsActionPerformed
    {//GEN-HEADEREND:event_setToDefaultsActionPerformed
        if (tabs.getSelectedComponent() == pinnateTab)
        {
            pinnateResetButtonActionPerformed(null);
        } // end if the selected tab is the pinnate tab
    }//GEN-LAST:event_setToDefaultsActionPerformed

    private void fileExitMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fileExitMenuItemActionPerformed
    {//GEN-HEADEREND:event_fileExitMenuItemActionPerformed
        // quit in a way that makes jframe happy
        dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_fileExitMenuItemActionPerformed

    private void pinnateResetButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_pinnateResetButtonActionPerformed
    {//GEN-HEADEREND:event_pinnateResetButtonActionPerformed
        // set all the fields to default values
        // define default values in final variables
        // dimensions
        int width     = 1280;
        int height    = 720;
        // midrib
        double midribLenProp            = 0.7;
        double midribOffsetProp         = 0.1;
        double[] midribLenPropBounds    = {-0.1, 0.1};
        double[] midribOffsetPropBounds = {-0.1, 0.1};

        // primary veins
        //        String pVLengths = "0.15,0.27,0.31,0.22";
        double pVNumber = 4.0;
        double pVAngle = 45.0;
        double[] pVAngleBounds  = {-0.1, 0.1};
        double[] pVLengthBounds = {-0.1, 0.1};
        
        double laminaBreadth = 0.2;
        double laminaRise = 0.2;
        double laminaFall = 0.6;

        // set fields
        widthField.setText(Integer.toString(width));
        heightField.setText(Integer.toString(height));

        midribLengthPropField.setText(Double.toString(midribLenProp));
        midribLengthPropLB.setText(Double.toString(midribLenPropBounds[0]));
        midribLengthPropRB.setText(Double.toString(midribLenPropBounds[1]));

        midribOffsetPropField.setText(Double.toString(midribOffsetProp));
        midribMarginPropLB.setText(Double.toString(midribOffsetPropBounds[0]));
        midribMarginPropRB.setText(Double.toString(midribOffsetPropBounds[1]));

        pVAngleField.setText(Double.toString(pVAngle));
        pVAngleLB.setText(Double.toString(pVAngleBounds[0]));
        pVAngleRB.setText(Double.toString(pVAngleBounds[1]));

        pVNumVeinsLB.setText(Double.toString(pVNumber));
        // pVVeinLengthsField.setText(pVLengths);
        
        laminaBreadthField.setText(Double.toString(laminaBreadth));
        laminaRiseSlider.setValue((int) (laminaRise*100));
        laminaFallSlider.setValue((int) (laminaFall*100));
        laminaRiseField.setText(Double.toString(laminaRise));
        laminaFallField.setText(Double.toString(laminaFall));
        
        genOptsNumSpinner.setValue((int) 1);
    }//GEN-LAST:event_pinnateResetButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_startButtonActionPerformed
    {//GEN-HEADEREND:event_startButtonActionPerformed
        // initialize variables to be gotten from fields
        // dimensions
        int width, height;
        // midrib
        double midribLenProp, midribOffsetProp;
        double[] midribLenPropBounds = new double[2];
        double[] midribOffsetPropBounds = new double[2];

        // primary veins
        String[] pVLenStrs = new String[(int) (Double.parseDouble(pVNumVeinsLB.getText()))]; // pVVeinLengthsField.getText().split(",");
        
        for (int i = 0; i < pVLenStrs.length; i++)
        {
            pVLenStrs[i] = "1.0";
        }
        
        double[] pVLengths = new double[pVLenStrs.length];
        double[] pVParameters = new double[2 + pVLenStrs.length];
        double[] pVAngleBounds = new double[2];
        double[] pVLengthBounds = {1.0, 1.01};
        
        double[] laminaArgs = new double[3];

        // get values from fields
        width = Integer.parseInt(widthField.getText());
        height = Integer.parseInt(heightField.getText());

        midribLenProp = Double.parseDouble(midribLengthPropField.getText());
        midribLenPropBounds[0] = 1.0 + Double.parseDouble(midribLengthPropLB.getText());
        midribLenPropBounds[1] = 1.0 + Double.parseDouble(midribLengthPropRB.getText());

        midribOffsetProp = Double.parseDouble(midribOffsetPropField.getText());
        midribOffsetPropBounds[0] = 1.0 + Double.parseDouble(midribMarginPropLB.getText());
        midribOffsetPropBounds[1] = 1.0 + Double.parseDouble(midribMarginPropRB.getText());
        
        laminaArgs[0] = Double.parseDouble(laminaBreadthField.getText());
        laminaArgs[1] = Double.parseDouble(laminaRiseField.getText());
        laminaArgs[2] = Double.parseDouble(laminaFallField.getText());

//        // copy strings to doubles in arrays
        for (int i = 0; i < pVLenStrs.length; i++)
        {
            pVLengths[i] = Double.parseDouble(pVLenStrs[i]);
        } // end for loop

        pVParameters[0] = Double.parseDouble(pVNumVeinsLB.getText());
        pVParameters[1] = Double.parseDouble(pVAngleField.getText());

        for (int i = 2; i < pVParameters.length; i++)
        {
            pVParameters[i] = pVLengths[i-2];
        } // end for loop

        pVAngleBounds[0] = 1.0 + Double.parseDouble(pVAngleLB.getText());
        pVAngleBounds[1] = 1.0 + Double.parseDouble(pVAngleRB.getText());

        for (int i = 0; i < (int) genOptsNumSpinner.getValue(); i++)
        {
            // generate random numbers between bounds
            double midribLenPropMult = ThreadLocalRandom.current().nextDouble(
                midribLenPropBounds[0],
                midribLenPropBounds[1]
            );
            double midribOffsetPropMult = ThreadLocalRandom.current().nextDouble(
                midribOffsetPropBounds[0],
                midribOffsetPropBounds[1]
            );
            double pVAngleMult = ThreadLocalRandom.current().nextDouble(
                pVAngleBounds[0],
                pVAngleBounds[1]
            );

            // multiply parameters by random values
            // copy pVParameters
            double[] pVLocParams = pVParameters.clone();

            pVLocParams[1] *= pVAngleMult;

            for (int j = 2; j < pVParameters.length; j++)
            {
                pVLocParams[j] *= ThreadLocalRandom.current().nextDouble(
                    pVLengthBounds[0],
                    pVLengthBounds[1]
                );
            } // end for loop

            Generator arrayGen = new Generator(
                // image
                width,		// width
                height,		// height
                // midrib
                midribLenProp *
                midribLenPropMult, 	// midrib length proportion
                1,                          // midrib actual length (unused)
                midribOffsetProp *
                midribOffsetPropMult, //start offset proportion
                // primary veins
                "pinnate",          // style
                pVLocParams,       // parameters of generation
                // lamina
                "linear",               // style
                laminaArgs // arguments
            );

            progressBar.setMinimum(0);
            progressBar.setMaximum(i);
            progressBar.setValue(0);
            try
            {
                // retrieve image
                BufferedImage bi = arrayGen.createBufferedImage();
                File outputFile;
                System.out.println("Saving to " + genOptsPathField.getText() + "\\saved" + (i+1) + ".png");
                outputFile = new File(genOptsPathField.getText() + "\\saved" + (i+1) + ".png");
                ImageIO.write(
                    bi,
                    (String) genOptsFileTypeComboBox.getSelectedItem(),
                    outputFile
                );
                progressBar.setValue(i);
            } // end try
            catch (IOException e)
            {
                e.printStackTrace();
            } // end catch
        } // end for loop
    }//GEN-LAST:event_startButtonActionPerformed

    private void genOptsPathFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_genOptsPathFieldActionPerformed
    {//GEN-HEADEREND:event_genOptsPathFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genOptsPathFieldActionPerformed

    private void pVAngleFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_pVAngleFieldActionPerformed
    {//GEN-HEADEREND:event_pVAngleFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pVAngleFieldActionPerformed

    private void pVNumVeinsRBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_pVNumVeinsRBActionPerformed
    {//GEN-HEADEREND:event_pVNumVeinsRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pVNumVeinsRBActionPerformed

    private void pVNumVeinsLBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_pVNumVeinsLBActionPerformed
    {//GEN-HEADEREND:event_pVNumVeinsLBActionPerformed
        // TODO
    }//GEN-LAST:event_pVNumVeinsLBActionPerformed

    private void pVNumVeinsFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_pVNumVeinsFieldActionPerformed
    {//GEN-HEADEREND:event_pVNumVeinsFieldActionPerformed
        pVNumVeinsLB.setText(pVNumVeinsField.getText());
        pVNumVeinsRB.setText(pVNumVeinsLB.getText());
    }//GEN-LAST:event_pVNumVeinsFieldActionPerformed

    private void midribLengthPropRBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_midribLengthPropRBActionPerformed
    {//GEN-HEADEREND:event_midribLengthPropRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_midribLengthPropRBActionPerformed

    private void midribLengthPropLBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_midribLengthPropLBActionPerformed
    {//GEN-HEADEREND:event_midribLengthPropLBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_midribLengthPropLBActionPerformed

    private void midribOffsetPropFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_midribOffsetPropFieldActionPerformed
    {//GEN-HEADEREND:event_midribOffsetPropFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_midribOffsetPropFieldActionPerformed

    private void midribLengthPropFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_midribLengthPropFieldActionPerformed
    {//GEN-HEADEREND:event_midribLengthPropFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_midribLengthPropFieldActionPerformed

    private void widthFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_widthFieldActionPerformed
    {//GEN-HEADEREND:event_widthFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_widthFieldActionPerformed

    private void laminaRiseSliderMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_laminaRiseSliderMouseReleased
    {//GEN-HEADEREND:event_laminaRiseSliderMouseReleased
        // disallow rise lsider being greater than fall slider
        if (laminaRiseSlider.getValue() > laminaFallSlider.getValue())
        {
            laminaRiseSlider.setValue(laminaFallSlider.getValue());
        } // end if
        
        // update text field to match
        laminaRiseField.setText(String.valueOf(laminaRiseSlider.getValue()/100.0));
    }//GEN-LAST:event_laminaRiseSliderMouseReleased

    private void laminaFallSliderMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_laminaFallSliderMouseReleased
    {//GEN-HEADEREND:event_laminaFallSliderMouseReleased
        // disallow rise lsider being greater than fall slider
        if (laminaFallSlider.getValue() < laminaRiseSlider.getValue())
        {
            laminaFallSlider.setValue(laminaRiseSlider.getValue());
        } // end if

        // update text field to match
        laminaFallField.setText(String.valueOf(laminaFallSlider.getValue()/100.0));
    }//GEN-LAST:event_laminaFallSliderMouseReleased

    private void laminaRiseFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_laminaRiseFieldFocusLost
    {//GEN-HEADEREND:event_laminaRiseFieldFocusLost
        try
        {
            // set slider to this
            laminaRiseSlider.setValue((int) (Double.parseDouble(laminaRiseField.getText())*100));

            // disallow rise lsider being greater than fall slider
            if (laminaRiseSlider.getValue() > laminaFallSlider.getValue())
            {
                laminaRiseSlider.setValue(laminaFallSlider.getValue());
            } // end if

            // update text field to match
            laminaRiseField.setText(String.valueOf(laminaRiseSlider.getValue()/100.0));
        } // end try
        catch (NumberFormatException ex)
        {
            // caught error
        } // end catch
    }//GEN-LAST:event_laminaRiseFieldFocusLost

    private void laminaFallFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_laminaFallFieldFocusLost
    {//GEN-HEADEREND:event_laminaFallFieldFocusLost
        try
        {
        // set slider to this
            laminaFallSlider.setValue((int) (Double.parseDouble(laminaFallField.getText())*100));

            // disallow rise lsider being greater than fall slider
            if (laminaFallSlider.getValue() < laminaRiseSlider.getValue())
            {
                laminaFallSlider.setValue(laminaRiseSlider.getValue());
            } // end if

            // update text field to match
            laminaFallField.setText(String.valueOf(laminaFallSlider.getValue()/100.0));
        } // end try
        catch (NumberFormatException ex)
        {
            // caught error
        } // end catch
    }//GEN-LAST:event_laminaFallFieldFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } // end try to set look and feel
        catch (ClassNotFoundException | 
                InstantiationException | 
                IllegalAccessException | 
                javax.swing.UnsupportedLookAndFeelException ex) 
        {
            java.util.logging.Logger.getLogger(GeneratorWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } // end catch
        //</editor-fold> // end catch
       //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() ->
        {
            new GeneratorWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu EditMenu;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenu ToolMenu;
    private javax.swing.JLabel dimensionsLabel;
    private javax.swing.JMenuItem fileExitMenuItem;
    private javax.swing.JComboBox<String> genOptsFileTypeComboBox;
    private javax.swing.JLabel genOptsFileTypeLabel;
    private javax.swing.JLabel genOptsLabel;
    private javax.swing.JLabel genOptsNumLabel;
    private javax.swing.JSpinner genOptsNumSpinner;
    private javax.swing.JTextField genOptsPathField;
    private javax.swing.JLabel genOptsPathLabel;
    private javax.swing.JTextField heightField;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextField laminaBreadthField;
    private javax.swing.JLabel laminaBreadthLabel;
    private javax.swing.JTextField laminaFallField;
    private javax.swing.JSlider laminaFallSlider;
    private javax.swing.JLabel laminaLabel;
    private javax.swing.JTextField laminaRiseField;
    private javax.swing.JLabel laminaRiseLabel;
    private javax.swing.JSlider laminaRiseSlider;
    private javax.swing.JLabel maxVarLabel;
    private javax.swing.JLabel maxVarLabelPV;
    private javax.swing.JLabel midribLabel;
    private javax.swing.JTextField midribLengthPropField;
    private javax.swing.JTextField midribLengthPropLB;
    private javax.swing.JLabel midribLengthPropLabel;
    private javax.swing.JTextField midribLengthPropRB;
    private javax.swing.JTextField midribMarginPropLB;
    private javax.swing.JTextField midribMarginPropRB;
    private javax.swing.JTextField midribOffsetPropField;
    private javax.swing.JLabel midribOffsetPropLabel;
    private javax.swing.JLabel minVarLabel;
    private javax.swing.JLabel minVarLabelPV;
    private javax.swing.JLabel multSignLabel;
    private javax.swing.JTextField pVAngleField;
    private javax.swing.JTextField pVAngleLB;
    private javax.swing.JLabel pVAngleLabel;
    private javax.swing.JTextField pVAngleRB;
    private javax.swing.JLabel pVLabel;
    private javax.swing.JTextField pVNumVeinsField;
    private javax.swing.JTextField pVNumVeinsLB;
    private javax.swing.JLabel pVNumVeinsLabel;
    private javax.swing.JTextField pVNumVeinsRB;
    private javax.swing.JPanel parallelVeins;
    private javax.swing.JButton pinnateResetButton;
    private javax.swing.JPanel pinnateTab;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel progressLabel;
    private javax.swing.JMenuItem setToDefaults;
    private javax.swing.JButton startButton;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JLabel tabsInstructionLabel;
    private javax.swing.JTextField widthField;
    // End of variables declaration//GEN-END:variables
}
