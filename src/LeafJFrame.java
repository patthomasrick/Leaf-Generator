/*
 * LeafJFrame.java
 * 
 * Original project proposal:
 * 
 * The program would be a generator for life-like tree leaf images. The leaves would have variance within 
 * species, and would have the feature of a branching vein generation system. The leaves would be 
 * generated in similar structures as real-life leaves. The structures would for example include veins 
 * extending from one point on the leaf, veins branching from one midrib along the length of the leaf, 
 * and more. While veins are key features of leaves, this is put in place mainly to allow for the easier 
 * creation of the actual leaf. The veins would determine the path of the margin of the leaf, enclosing 
 * the middle of the leaf. The margins would also be customizable, with the margins able to be specified 
 * as a given pattern (smooth, finely-toothed, saw-toothed, etc.). 
 * 
 * This program would have applications mainly limited to research. The main inspiration for this program 
 * is my science fair project, where it was eventually shown that I needed a high quantity of leaf images 
 * to improve the accuracy of the leaf-identification program. This program would allow me to program in 
 * species of leaves and then batch-create hundreds, perhaps even thousands of leaf images. Other research 
 * projects that involve computer vision could also perhaps benefit from this project. Additionally, the 
 * program's methods could perhaps be useful to graphic designers who need random leaves for their project.
 * For example, the leaves could be used in a game to make trees look life-like.
 */

// import statements
//import java.awt.*;
//import java.awt.image.BufferedImage;
//import java.io.File;
//import java.io.FileNotFoundException;
//import java.io.FileOutputStream;
//import java.io.IOException;
//import java.io.PrintStream;
//
//import javax.imageio.ImageIO;
//import javax.swing.*;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.ThreadLocalRandom;

import javax.imageio.ImageIO;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pthom
 */
public class LeafJFrame extends javax.swing.JFrame 
{
	private static final long serialVersionUID = 1L;
	
	/**
     * Creates new form GeneratorWindow
     */
    public LeafJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents()
    {

        // jSeparator3 = new javax.swing.JSeparator();
        popupMenu1 = new java.awt.PopupMenu();
        jFrame1 = new javax.swing.JFrame();
        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        tabsInstructionLabel = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        pinnateTab = new javax.swing.JPanel();
        dimensionsLabel = new javax.swing.JLabel();
        multSignLabel = new javax.swing.JLabel();
        widthField = new javax.swing.JTextField();
        heightField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        midribLabel = new javax.swing.JLabel();
        midribLengthPropLabel = new javax.swing.JLabel();
        midribLengthPropField = new javax.swing.JTextField();
        midribOffsetPropLabel = new javax.swing.JLabel();
        midribOffsetPropField = new javax.swing.JTextField();
        minVarLabel = new javax.swing.JLabel();
        maxVarLabel = new javax.swing.JLabel();
        midribLengthPropLB = new javax.swing.JTextField();
        midribLengthPropRB = new javax.swing.JTextField();
        midribMarginPropLB = new javax.swing.JTextField();
        midribMarginPropRB = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        pVLabel = new javax.swing.JLabel();
        maxVarLabelPV = new javax.swing.JLabel();
        minVarLabelPV = new javax.swing.JLabel();
        pVNumVeinsLabel = new javax.swing.JLabel();
        pVNumVeinsField = new javax.swing.JTextField();
        pVNumVeinsLB = new javax.swing.JTextField();
        pVNumVeinsRB = new javax.swing.JTextField();
        pVAngleLabel = new javax.swing.JLabel();
        pVAngleField = new javax.swing.JTextField();
        pVAngleLB = new javax.swing.JTextField();
        pVAngleRB = new javax.swing.JTextField();
        pVVeinLengthsLabel = new javax.swing.JLabel();
        pVVeinLengthsField = new javax.swing.JTextField();
        pVVeinLengthsInstructions = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        genOptsLabel = new javax.swing.JLabel();
        genOptsFileTypeLabel = new javax.swing.JLabel();
        genOptsFileTypeComboBox = new javax.swing.JComboBox<>();
        genOptsPathLabel = new javax.swing.JLabel();
        genOptsPathField = new javax.swing.JTextField();
        genOptsNumLabel = new javax.swing.JLabel();
        genOptsNumSpinner = new javax.swing.JSpinner();
        progressBar = new javax.swing.JProgressBar();
        startButton = new javax.swing.JButton();
        progressLabel = new javax.swing.JLabel();

        popupMenu1.setLabel("popupMenu1");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabsInstructionLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        tabsInstructionLabel.setLabelFor(tabs);
        tabsInstructionLabel.setText("Choose a style of leaf to generate on the available tabs.");

        dimensionsLabel.setText("Dimensions");

        multSignLabel.setText("x");

        widthField.setText("1280");
        widthField.setToolTipText("The width of the image that will be generated");
        widthField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                widthFieldActionPerformed(evt);
            }
        });

        heightField.setText("720");
        heightField.setToolTipText("The height of the image that will be generated");

        midribLabel.setText("Midrib");

        midribLengthPropLabel.setText("Length proportion");

        midribLengthPropField.setText("Double between 0.0 and 1.0");
        midribLengthPropField.setToolTipText("Length of the midrib in respect to the width of the image");
        midribLengthPropField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                midribLengthPropFieldActionPerformed(evt);
            }
        });

        midribOffsetPropLabel.setText("Margin proportion");

        midribOffsetPropField.setText("Double between 0.0 and 1.0");
        midribOffsetPropField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                midribOffsetPropFieldActionPerformed(evt);
            }
        });

        minVarLabel.setText("Left Bound");

        maxVarLabel.setText("Right bound");

        midribLengthPropLB.setText("-0.10");
        midribLengthPropLB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                midribLengthPropLBActionPerformed(evt);
            }
        });

        midribLengthPropRB.setText("0.10");
        midribLengthPropRB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                midribLengthPropRBActionPerformed(evt);
            }
        });

        midribMarginPropLB.setText("-0.10");

        midribMarginPropRB.setText("0.10");

        pVLabel.setText("Primary Veins");

        maxVarLabelPV.setText("Right bound");

        minVarLabelPV.setText("Left Bound");

        pVNumVeinsLabel.setText("Num. veins");

        pVNumVeinsField.setEditable(false);
        pVNumVeinsField.setText("Set using bounds");
        pVNumVeinsField.setToolTipText("The number of branching veins from the midrib on one side of the leaf");
        pVNumVeinsField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pVNumVeinsFieldActionPerformed(evt);
            }
        });

        pVNumVeinsLB.setText("Integer");
        pVNumVeinsLB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pVNumVeinsLBActionPerformed(evt);
            }
        });

        pVNumVeinsRB.setEditable(false);
        pVNumVeinsRB.setText("Integer");
        pVNumVeinsRB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pVNumVeinsRBActionPerformed(evt);
            }
        });

        pVAngleLabel.setText("Angle of veins");

        pVAngleField.setText("Degrees between 0 to 180");
        pVAngleField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pVAngleFieldActionPerformed(evt);
            }
        });

        pVAngleLB.setText("-0.10");

        pVAngleRB.setText("0.10");

        pVVeinLengthsLabel.setText("Vein lengths");

        pVVeinLengthsField.setText("ex. 0.15,0.20,0.20,0.15");
        pVVeinLengthsField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pVVeinLengthsFieldActionPerformed(evt);
            }
        });

        pVVeinLengthsInstructions.setText("Mouseover for instructions");
        pVVeinLengthsInstructions.setToolTipText("<html>Enter numbers that are proportions of the height of the image as the lengths of the veins. Enter them consecuitively and <b>separated by commas</b>.</html>");

        genOptsLabel.setText("Generator Options");

        genOptsFileTypeLabel.setText("File type");

        genOptsFileTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GIF", "PNG", "JPG" }));
        genOptsFileTypeComboBox.setSelectedIndex(1);

        genOptsPathLabel.setText("Output path");

        genOptsPathField.setText(System.getProperty("user.dir"));
        genOptsPathField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                genOptsPathFieldActionPerformed(evt);
            }
        });

        genOptsNumLabel.setText("Number of images to generate");

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                startButtonActionPerformed(evt);
            }
        });

        progressLabel.setText("Progress");

        javax.swing.GroupLayout pinnateTabLayout = new javax.swing.GroupLayout(pinnateTab);
        pinnateTab.setLayout(pinnateTabLayout);
        pinnateTabLayout.setHorizontalGroup(
            pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pinnateTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pinnateTabLayout.createSequentialGroup()
                        .addComponent(genOptsNumLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(genOptsNumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pinnateTabLayout.createSequentialGroup()
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinnateTabLayout.createSequentialGroup()
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pVNumVeinsLabel)
                                    .addComponent(pVAngleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pVVeinLengthsLabel)
                                    .addComponent(pVLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pinnateTabLayout.createSequentialGroup()
                                        .addComponent(pVVeinLengthsField)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pVVeinLengthsInstructions))
                                    .addGroup(pinnateTabLayout.createSequentialGroup()
                                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pVNumVeinsField)
                                            .addComponent(pVAngleField))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(pVNumVeinsLB, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(minVarLabelPV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(pVAngleLB))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(pVNumVeinsRB)
                                            .addComponent(pVAngleRB)
                                            .addComponent(maxVarLabelPV, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)))))
                            .addComponent(jSeparator4)
                            .addGroup(pinnateTabLayout.createSequentialGroup()
                                .addComponent(genOptsPathLabel)
                                .addGap(18, 18, 18)
                                .addComponent(genOptsPathField)
                                .addGap(18, 18, 18)
                                .addComponent(genOptsFileTypeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(genOptsFileTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pinnateTabLayout.createSequentialGroup()
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pinnateTabLayout.createSequentialGroup()
                                        .addComponent(widthField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(multSignLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(heightField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(dimensionsLabel)
                                    .addComponent(genOptsLabel))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinnateTabLayout.createSequentialGroup()
                                .addComponent(progressLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(startButton))
                            .addGroup(pinnateTabLayout.createSequentialGroup()
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1)
                                    .addGroup(pinnateTabLayout.createSequentialGroup()
                                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(midribLengthPropLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(midribOffsetPropLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(midribLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(midribOffsetPropField, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                            .addComponent(midribLengthPropField))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(minVarLabel)
                                    .addComponent(midribMarginPropLB, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(midribLengthPropLB, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(maxVarLabel)
                                    .addComponent(midribLengthPropRB)
                                    .addComponent(midribMarginPropRB))))
                        .addContainerGap())))
        );
        pinnateTabLayout.setVerticalGroup(
            pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pinnateTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dimensionsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pinnateTabLayout.createSequentialGroup()
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pinnateTabLayout.createSequentialGroup()
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinnateTabLayout.createSequentialGroup()
                                        .addComponent(maxVarLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(midribLengthPropRB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(midribLengthPropField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinnateTabLayout.createSequentialGroup()
                                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(widthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(heightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(multSignLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(midribLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(midribLengthPropLabel)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(midribMarginPropRB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(midribOffsetPropField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(midribOffsetPropLabel)))
                            .addGroup(pinnateTabLayout.createSequentialGroup()
                                .addComponent(minVarLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(midribLengthPropLB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(midribMarginPropLB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinnateTabLayout.createSequentialGroup()
                                .addComponent(minVarLabelPV)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pVNumVeinsLB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pVNumVeinsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pinnateTabLayout.createSequentialGroup()
                                .addComponent(pVLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pVNumVeinsLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pVAngleLB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pVAngleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pVAngleLabel)))
                    .addGroup(pinnateTabLayout.createSequentialGroup()
                        .addComponent(maxVarLabelPV)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pVNumVeinsRB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pVAngleRB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pVVeinLengthsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pVVeinLengthsLabel)
                    .addComponent(pVVeinLengthsInstructions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(genOptsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genOptsPathLabel)
                    .addComponent(genOptsPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genOptsFileTypeLabel)
                    .addComponent(genOptsFileTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genOptsNumLabel)
                    .addComponent(genOptsNumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                .addGroup(pinnateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(progressLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pinnateTabLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {midribLengthPropField, midribOffsetPropField});

        pinnateTabLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {pVAngleField, pVNumVeinsField, pVVeinLengthsField});

        tabs.addTab("Pinnately Veined", pinnateTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabsInstructionLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabsInstructionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>                        

    private void genOptsPathFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void pVVeinLengthsFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
    }                                                  

    private void pVAngleFieldActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void pVNumVeinsRBActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void pVNumVeinsLBActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void pVNumVeinsFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                
        pVNumVeinsLB.setText(pVNumVeinsField.getText());
    }                                               

    private void midribLengthPropRBActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
    }                                                  

    private void midribLengthPropLBActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
    }                                                  

    private void midribOffsetPropFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
    }                                                     

    private void widthFieldActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void midribLengthPropFieldActionPerformed(java.awt.event.ActionEvent evt)                                                      
    {                                                          
        // TODO add your handling code here:
    }                                                     

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt)                                            
    {         
    	// get random number bounds to modify the dimensions by
    	double[] midribLengthPropBounds = {
    			1.0 + Double.parseDouble(midribLengthPropLB.getText()),
    			1.0 + Double.parseDouble(midribLengthPropRB.getText())
    	};
    	double[] midribMarginPropBounds = {
    			1.0 + Double.parseDouble(midribLengthPropLB.getText()),
    			1.0 + Double.parseDouble(midribLengthPropRB.getText())
    	};
    	double[] pVAngleBounds = {
    			1.0 + Double.parseDouble(pVAngleLB.getText()),
    			1.0 + Double.parseDouble(pVAngleRB.getText())
    	};
    	
    	// set the progress bar's max value to the number on the spinner
    	this.progressBar.setMaximum((int) genOptsNumSpinner.getValue());
    	
    	for (int i = 0; i < (int) genOptsNumSpinner.getValue(); i++)
    	{
    		// set the progress bar
    		this.progressBar.setValue(i+1);
    		
    		// get the random numbers
    		double midribLengthPropMult = ThreadLocalRandom.current().nextDouble(
    				midribLengthPropBounds[0], midribLengthPropBounds[1]);
    		double midribMarginPropMult = ThreadLocalRandom.current().nextDouble(
    				midribMarginPropBounds[0], midribMarginPropBounds[1]);
    		double pVAngleMult = ThreadLocalRandom.current().nextDouble(
    				pVAngleBounds[0], pVAngleBounds[1]);
    		
	        double[] primaryVeinsParameters = {
	        			Double.parseDouble((pVNumVeinsLB.getText())), 	// number of veins
	        			Double.parseDouble((pVAngleField.getText()))
	        			* pVAngleMult, 	// angle of veins
	                    0.15, 	// length of vein 1
	                    0.23,	// length of vein 2
	                    0.30, 	// length of vein 3
	                    0.25	// length of vein 4
	                    };
	        
	        LeafArrayGenerator arrayGen = new LeafArrayGenerator(
	        		Integer.parseInt(widthField.getText()),				// width 
	        		Integer.parseInt(heightField.getText()),			// height
	        		Double.parseDouble(midribLengthPropField.getText())
        			* midribLengthPropMult, 							// midrib length proportion
	        		1, 													// midrib actual length (unused)
	        		Double.parseDouble(midribOffsetPropField.getText())
        			* midribMarginPropMult,								// midrib start offset proportion
	        		"pinnate",
	        		primaryVeinsParameters								// parameters for the primary veins as previously defined
	        		);
	        
	        
	        try 
	        {
	            // retrieve image
	            BufferedImage bi = arrayGen.createBufferedImage();
	            File outputFile;
	            outputFile = new File("saved" + (i+1) + ".png");
	            ImageIO.write(bi, "png", outputFile);
	        } // end try
	        catch (IOException e)
	        {
	            e.printStackTrace();
	        } // end catch
    	}
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LeafJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LeafJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LeafJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LeafJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LeafJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel dimensionsLabel;
    private javax.swing.JComboBox<String> genOptsFileTypeComboBox;
    private javax.swing.JLabel genOptsFileTypeLabel;
    private javax.swing.JLabel genOptsLabel;
    private javax.swing.JLabel genOptsNumLabel;
    private javax.swing.JSpinner genOptsNumSpinner;
    private javax.swing.JTextField genOptsPathField;
    private javax.swing.JLabel genOptsPathLabel;
    private javax.swing.JTextField heightField;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel maxVarLabel;
    private javax.swing.JLabel maxVarLabelPV;
    private javax.swing.JLabel midribLabel;
    private javax.swing.JTextField midribLengthPropField;
    private javax.swing.JTextField midribLengthPropLB;
    private javax.swing.JLabel midribLengthPropLabel;
    private javax.swing.JTextField midribLengthPropRB;
    private javax.swing.JTextField midribMarginPropLB;
    private javax.swing.JTextField midribMarginPropRB;
    private javax.swing.JTextField midribOffsetPropField;
    private javax.swing.JLabel midribOffsetPropLabel;
    private javax.swing.JLabel minVarLabel;
    private javax.swing.JLabel minVarLabelPV;
    private javax.swing.JLabel multSignLabel;
    private javax.swing.JTextField pVAngleField;
    private javax.swing.JTextField pVAngleLB;
    private javax.swing.JLabel pVAngleLabel;
    private javax.swing.JTextField pVAngleRB;
    private javax.swing.JLabel pVLabel;
    private javax.swing.JTextField pVNumVeinsField;
    private javax.swing.JTextField pVNumVeinsLB;
    private javax.swing.JLabel pVNumVeinsLabel;
    private javax.swing.JTextField pVNumVeinsRB;
    private javax.swing.JTextField pVVeinLengthsField;
    private javax.swing.JLabel pVVeinLengthsInstructions;
    private javax.swing.JLabel pVVeinLengthsLabel;
    private javax.swing.JPanel pinnateTab;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel progressLabel;
    private javax.swing.JButton startButton;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JLabel tabsInstructionLabel;
    private javax.swing.JTextField widthField;
    // End of variables declaration                   
}

//public class LeafJFrame
//{
//    final static int windowWidth = 400;
//
//    public void addComponentToPane(Container pane)
//    {
//    	JPanel instructions = new JPanel() {
//        	// to statisfy warning
//			private static final long serialVersionUID = 1L;
//
//			// Make the panel wider than it really needs, so
//            // the window's wide enough for the tabs to stay
//            // in one row.
//            public Dimension getPreferredSize() {
//                Dimension size = super.getPreferredSize();
//                size.width = windowWidth;
//                return size;
//            }
//        };
//        instructions.add(new JLabel("Instructions are here"));
//        
//        JPanel inputPanel = new JPanel();
//        JLabel angleLabel = new JLabel("Angle of primary veins: ");
//        JTextField angleIn = new JTextField(20);
//        
//        inputPanel.add(angleIn);
//    	
//        // create the button panel
//        JPanel buttonPanel = new JPanel();
//        
//        buttonPanel.add(new JButton("Create Image"));
//
//        pane.add(instructions, BorderLayout.PAGE_START);
//        pane.add(inputPanel);
//        pane.add(buttonPanel, BorderLayout.SOUTH);
//    }
//
//    /**
//     * Create the GUI and show it.  For thread safety,
//     * this method should be invoked from the
//     * event dispatch thread.
//     */
//    private static void createAndShowGUI() {
//        //Create and set up the window.
//        JFrame frame = new JFrame("TabDemo");
//        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//
//        //Create and set up the content pane.
//        LeafJFrame gui = new LeafJFrame();
//        gui.addComponentToPane(frame.getContentPane());
//
//        //Display the window.
//        frame.pack();
//        frame.setVisible(true);
//    }
//
//    public static void main(String[] args) {
//    	// run output to file
//    	PrintStream out;
//		try
//		{
//			out = new PrintStream(new FileOutputStream("output.txt"));
//	    	System.setOut(out);
//		} 
//		catch (FileNotFoundException e)
//		{
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//    	
//        /* Use an appropriate Look and Feel */
//        try {
//            // UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
//            UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
//        } catch (UnsupportedLookAndFeelException ex) {
//            ex.printStackTrace();
//        } catch (IllegalAccessException ex) {
//            ex.printStackTrace();
//        } catch (InstantiationException ex) {
//            ex.printStackTrace();
//        } catch (ClassNotFoundException ex) {
//            ex.printStackTrace();
//        }
//        /* Turn off metal's use of bold fonts */
//        UIManager.put("swing.boldMetal", Boolean.FALSE);
//        
//        
//        double[] primaryVeinsParameters = {
//        		4.0, 	// number of veins
//        		60.0, 	// angle of veins
//        		0.15, 	// length of vein 1
//        		0.23,	// length of vein 2
//        		0.30, 	// length of vein 1
//        		0.25	// length of vein 2
//        		};
//        
//        LeafArrayGenerator arrayGen = new LeafArrayGenerator(
//        		1200,		// width 
//        		900,		// height
//        		0.70, 	// midrib length proportion
//        		30, 	// midrib actual length (unused)
//        		0.10,	// midrib start offset proportion
//        		"pinnate",
//        		primaryVeinsParameters
//        		);
//        
//        arrayGen.printBoolean();
//        
//        // try to create and save the image
//        try 
//        {
//            // retrieve image
//            BufferedImage bi = arrayGen.createBufferedImage();
//            File outputFile = new File("saved.png");
//            ImageIO.write(bi, "png", outputFile);
//        } // end try
//        catch (IOException e)
//        {
//            e.printStackTrace();
//        } // end catch
//        
//        //Schedule a job for the event dispatch thread:
//        //creating and showing this application's GUI.
//        javax.swing.SwingUtilities.invokeLater(new Runnable() {
//            public void run() {
//                createAndShowGUI();
//            }
//        });
//    }
//}